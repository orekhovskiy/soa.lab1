{"version":3,"sources":["./src/app/product/product.service.ts","./src/environments/environment.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/utils/Types.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BodyProduct, Product } from \"src/utils/Types\";\r\nimport beautify from 'xml-beautifier';\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n    baseUrl = environment.baseUrl;\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    public sendRequest(url, body, method): Observable<any> {\r\n        const headers = new HttpHeaders().set('Content-Type', 'text/xml; charset=utf-8');\r\n        body = this.compactBody(body);\r\n        switch (method) {\r\n            case 'GET':\r\n                return this.http.get(this.baseUrl + url, {responseType: 'text'});\r\n            case 'POST':\r\n                return this.http.post(this.baseUrl + url, body, {headers, responseType: 'text'});\r\n            case 'DELETE':\r\n                const opts = {\r\n                    headers: headers,\r\n                    body: body,\r\n                  };\r\n                return this.http.delete(this.baseUrl + url, opts);\r\n            case 'PUT':\r\n                return this.http.put(this.baseUrl + url, body, {responseType: 'text'});\r\n        }\r\n    }\r\n\r\n    public castObjectToXML(el: BodyProduct): String {\r\n        var xmlString = '';\r\n        if (el.isEnabled) {\r\n            if (el.id.isEnabled) xmlString += this.makeXmlElement('id', el.id.value.value);\r\n            if (el.name.isEnabled) xmlString += this.makeXmlElement('name', el.name.value.value);\r\n            if (el.coordinates.isEnabled) {\r\n                let microElement = '';\r\n                if (el.coordinates.x.isEnabled) microElement += this.makeXmlElement('x', el.coordinates.x.value.value);\r\n                if (el.coordinates.y.isEnabled) microElement += this.makeXmlElement('y', el.coordinates.x.value.value);\r\n                xmlString += `<coordinates>${microElement}</coordinates>`;\r\n            }\r\n            if (el.creationDate.isEnabled) xmlString += this.makeXmlElement('creationDate', el.creationDate.value.value);\r\n            if (el.price.isEnabled) xmlString += this.makeXmlElement('price', el.price.value.value); \r\n            if (el.partNumber.isEnabled) xmlString += this.makeXmlElement('partNumber', el.partNumber.value.value);\r\n            if (el.manufactureCost.isEnabled) xmlString += this.makeXmlElement('manufactureCost', el.manufactureCost.value.value);\r\n            if (el.unitOfMeasure.isEnabled) xmlString += this.makeXmlElement('unitOfMeasure', el.unitOfMeasure.value.value);\r\n            if (el.person.isEnabled) {\r\n                let microElement = '';\r\n                if (el.person.name.isEnabled) microElement += this.makeXmlElement('name', el.person.name.value.value);\r\n                if (el.person.weight.isEnabled) microElement += this.makeXmlElement('weight', el.person.weight.value.value);\r\n                if (el.person.country.isEnabled) microElement += this.makeXmlElement('nationality', el.person.country.value.value);\r\n                let nanoElement = '';\r\n                if (el.person.location.isEnabled) {\r\n                    nanoElement += '<location>';\r\n                    if (el.person.location.x.isEnabled) nanoElement += this.makeXmlElement('x', el.person.location.x.value.value);\r\n                    if (el.person.location.y.isEnabled) nanoElement += this.makeXmlElement('y', el.person.location.y.value.value);\r\n                    if (el.person.location.z.isEnabled) nanoElement += this.makeXmlElement('z', el.person.location.z.value.value);\r\n                    nanoElement += '</location>';\r\n                }\r\n                xmlString += `<owner>${microElement}${nanoElement}</owner>`;\r\n            }\r\n            xmlString = `<product>${xmlString}</product>`;\r\n        }\r\n        //var parser = new DOMParser();\r\n        //var xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\r\n        \r\n        return beautify(xmlString);\r\n    }\r\n\r\n    public castXmlToObjectsArray(xml): Product[] {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xml,'application/xml');\r\n        const xmlElements = xmlDoc.getElementsByTagName('product');\r\n        let products = [];\r\n        for (let i = 0; i < xmlElements.length; i++) {\r\n            const xmlElement = xmlElements[i];\r\n            const id = this.getElementsByTagName(xmlElement, 'id')[0] ? this.getElementsByTagName(xmlElement, 'id')[0].innerHTML : null;\r\n            const name = this.getElementsByTagName(xmlElement, 'name')[0] ? this.getElementsByTagName(xmlElement, 'name')[0].innerHTML : null;\r\n            const coordinates = this.getElementsByTagName(xmlElement, 'coordinates')[0] ? this.getElementsByTagName(xmlElement, 'coordinates')[0] : null;\r\n            let coordinatesX, coordinatesY;\r\n            if (coordinates) {\r\n                coordinatesX = this.getElementsByTagName(coordinates, 'x')[0] ? this.getElementsByTagName(coordinates, 'x')[0].innerHTML : null;\r\n                coordinatesY = this.getElementsByTagName(coordinates, 'y')[0] ? this.getElementsByTagName(coordinates, 'y')[0].innerHTML : null;\r\n            }\r\n            const creationDate = this.getElementsByTagName(xmlElement, 'creationDate')[0] ? this.getElementsByTagName(xmlElement, 'creationDate')[0].innerHTML : null;\r\n            const price = this.getElementsByTagName(xmlElement, 'price')[0] ? this.getElementsByTagName(xmlElement, 'price')[0].innerHTML : null;\r\n            const partNumber = this.getElementsByTagName(xmlElement, 'partNumber')[0] ? this.getElementsByTagName(xmlElement, 'partNumber')[0].innerHTML : null;\r\n            const manufactureCost = this.getElementsByTagName(xmlElement, 'manufactureCost')[0] ? this.getElementsByTagName(xmlElement, 'manufactureCost')[0].innerHTML : null;\r\n            const uof = this.getElementsByTagName(xmlElement, 'unitOfMeasure')[0] ? this.getElementsByTagName(xmlElement, 'unitOfMeasure')[0].innerHTML : null;\r\n            const person = this.getElementsByTagName(xmlElement, 'owner')[0] ? this.getElementsByTagName(xmlElement, 'owner')[0] : null;\r\n            let personName, weight, nationality, location, locationX, locationY, locationZ;\r\n            if (person) {\r\n                personName = this.getElementsByTagName(person, 'name')[0] ? this.getElementsByTagName(person, 'name')[0].innerHTML : null;\r\n                weight = this.getElementsByTagName(person, 'weight')[0] ? this.getElementsByTagName(person, 'weight')[0].innerHTML : null;\r\n                nationality = this.getElementsByTagName(person, 'nationality')[0] ? this.getElementsByTagName(person, 'nationality')[0].innerHTML : null;\r\n                location = this.getElementsByTagName(person, 'location')[0] ? this.getElementsByTagName(person, 'location')[0] : null;\r\n                if (location) {\r\n                    locationX = this.getElementsByTagName(location, 'x')[0] ? this.getElementsByTagName(location, 'x')[0].innerHTML : null;\r\n                    locationY = this.getElementsByTagName(location, 'y')[0] ? this.getElementsByTagName(location, 'y')[0].innerHTML : null;\r\n                    locationZ = this.getElementsByTagName(location, 'z')[0] ? this.getElementsByTagName(location, 'z')[0].innerHTML : null;\r\n                }\r\n            }\r\n            const product: Product = {\r\n                id: id,\r\n                name: name,\r\n                coordinates: coordinates \r\n                    ? {\r\n                        x: coordinatesX,\r\n                        y: coordinatesY\r\n                    } \r\n                    : null,\r\n                creationDate: creationDate,\r\n                price: price,\r\n                partNumber: partNumber,\r\n                manufactureCost: manufactureCost,\r\n                unitOfMeasure: uof,\r\n                person: person\r\n                    ? {\r\n                        name: personName,\r\n                        weight: weight,\r\n                        country: nationality,\r\n                        location: location\r\n                            ? {\r\n                                x: locationX,\r\n                                y: locationY,\r\n                                z: locationZ\r\n                            }\r\n                            : null\r\n                    }\r\n                    : null\r\n            };\r\n            products.push(product);\r\n        }\r\n        return products;\r\n    }\r\n\r\n    private makeXmlElement(key: String, value: String) {\r\n        return `<${key}>${value}</${key}>`\r\n    }\r\n\r\n    private getElementsByTagName(xmlElement: Element, tagName): HTMLCollectionOf<Element> {\r\n        try {\r\n            return xmlElement.getElementsByTagName(tagName);\r\n        }\r\n        catch (e) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    private compactBody(body: String) {\r\n        let i = 0; \r\n        let compactBody = '';\r\n        while (i < body.length) {\r\n            let j = -1;\r\n            if (body[i] === '\\n') {\r\n                j = i;\r\n                while (body[j + 1] === ' ') j++;\r\n                i = j + 1;\r\n            }\r\n            compactBody += body[i];\r\n            i++;\r\n        }\r\n        return compactBody;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:6780'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { BodyProduct, Param, Template, Response, Alert } from 'src/utils/Types';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css'],\n  providers: [ProductService]\n})\nexport class ProductComponent implements OnInit {\n\n  template: Template = new Template('', '');\n  isXml: boolean = false;\n  methods: String[] = ['GET', 'POST', 'DELETE', 'PUT'];\n  templates: Template[] = [\n    // получение по ид: GET /products/id/{id}\n    new Template('GET', '/products/id/{id}'),\n    // расчет средней цены производителя : GET /products/manufacture-cost/average\n    new Template('GET', '/products/manufacture-cost/average'),\n    // получение всех: GET /products\n    new Template('GET', '/products'),\n    // удаление: DELETE /products/id/{id}\n    new Template('DELETE', '/products/id/{id}'),\n    // удаление всех где есть овнер: DELETE /products/owner (в боди объект)\n    new Template('DELETE', '/products/owner'),\n    // удалить любой где есть прайс: DELETE /products/price/{price}\n    new Template('DELETE', '/products/price/{price}'),\n    // добавление нового: POST /products\n    new Template('POST', '/products'),\n    // обновление: PUT /products\n    new Template('PUT', '/products'),\n  ];\n  pathParams: Param[] = [];\n  queryParams: Param[] = [];\n  preparedQueryParams: Param[] = [\n    { key: 'page-number', value: '', enabled: false },\n    { key: 'page-capacity', value: '', enabled: false },\n  ];\n  bodyProduct: BodyProduct = new BodyProduct();\n  textArea: String;\n  isRequestShown: boolean = true;\n  response: Response = new Response();\n  alert: Alert = new Alert;\n  isLoading: boolean = false;\n\n  constructor(private readonly productService: ProductService) { }\n\n  ngOnInit(): void { }\n\n  setTemplate(template: Template) {\n    this.template = new Template(template.getMethod(), template.getUrl());\n  }\n\n  removeParam(key: String, value: String, paramType: String) {\n    let index = -1;\n    let params;\n    switch (paramType) {\n      case 'path': \n        params = this.pathParams;\n        break;\n      case 'query':\n        params = this.queryParams;\n        break;\n    }\n\n    for (let i = 0; i < params.length; i++) {\n      if (params[i].key === key && params[i].value === value)\n        index = i;\n    }\n    if (index > -1) {\n      params.splice(index, 1);\n    }\n  }\n\n  addParam(paramType: String) {\n    const key = (<HTMLInputElement>document.getElementById(`${paramType}-param-key`)).value;\n    const value = (<HTMLInputElement>document.getElementById(`${paramType}-param-value`)).value;\n    if (key && value) {\n      switch (paramType) {\n        case 'path': \n        this.pathParams.push({key: key, value: value});\n          break;\n        case 'query':\n          this.queryParams.push({key: key, value: value});\n          break;\n      }\n      (<HTMLInputElement>document.getElementById(`${paramType}-param-key`)).value = '';\n      (<HTMLInputElement>document.getElementById(`${paramType}-param-value`)).value = '';\n    }\n  }\n\n  getXmlView(): String {\n    return this.productService.castObjectToXML(this.bodyProduct);\n  }\n\n  generateUrl(): String {\n    let pathParams = '';\n    let queryParams = '';\n    for (let pathParam of this.pathParams) {\n      pathParams += `/${pathParam.key}/${pathParam.value}`;\n    }\n    for (let prep of this.preparedQueryParams) {\n      if (prep.enabled) {\n        let id = `prep-param-${prep.key}`;\n        queryParams += `${prep.key}=${prep.value}&`;\n      }\n    }\n    for (let queryParam of this.queryParams) {\n      queryParams += `${queryParam.key}=${queryParam.value}&`;\n    }\n    queryParams = queryParams.slice(0, -1);\n    return queryParams\n      ? `${this.template.getUrl()}${pathParams}?${queryParams}`\n      : `${this.template.getUrl()}${pathParams}`;\n      \n  }\n\n  updateValue(key: String) {\n    for (let prep of this.preparedQueryParams) {\n      if (prep.key === key) {\n        prep.value = (<HTMLInputElement>document.getElementById(`prep-key-${key}`)).value;\n      }\n    }\n  }\n\n  sendRequest() {\n    let url = (<HTMLInputElement>document.getElementById('url')).value;\n    let method = this.template.getMethod();\n    if (!url) {\n      this.alert.isVisible = true;\n      this.alert.text = 'Please specify the url.';\n      this.alert.bootstrapType = 'warning';\n    }\n    else if (!method) {\n      this.alert.isVisible = true;\n      this.alert.text = 'Please specify the method.';\n      this.alert.bootstrapType = 'warning';\n    }\n    else {\n      this.isLoading = true;\n      this.alert.isVisible = false;\n      this.alert.text = '';\n      this.alert.bootstrapType = '';\n      let body: String = '';\n      if (this.isXml) {\n        body = (<HTMLInputElement>document.getElementById('xml-view')).value;\n      }\n      else {\n        body = this.getXmlView();\n      }\n      this.productService.sendRequest(url, body, method).subscribe(\n        (data) => {\n          this.isLoading = false;\n          var products = this.productService.castXmlToObjectsArray(data);\n          this.response.setProducts(products);\n          if (products.length > 0) {\n            this.response.setMessage('');\n          }\n          else {\n            if (data) {\n              this.response.setMessage(data);\n            }\n            else {\n              this.response.setMessage('OK');\n            }\n          }\n          this.response.setStatusCode(-1);\n          this.alert.isVisible = true;\n          this.alert.text = 'Positive response. For more details see \\'Response\\' tab.';\n          this.alert.bootstrapType = 'success';\n        },\n        (error) => {\n          this.isLoading = false;\n          this.response.setMessage(error.error);\n          this.response.setProducts([]);\n          this.response.setStatusCode(error.status);\n          this.alert.isVisible = true;\n          this.alert.text = 'Negative response. For more details see \\'Response\\' tab.';\n          this.alert.bootstrapType = 'danger';\n        }\n      );\n    }\n  }\n\n  setIsRequestShown(isRequestShown: boolean) {\n    this.isRequestShown = isRequestShown;\n    if (isRequestShown) {\n      document.getElementById('req-btn').blur();\n    }\n    else {\n      document.getElementById('res-btn').blur();\n    }\n  }\n}","<div class=\"container\">\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n        <button type=\"button\" class=\"btn btn-{{isRequestShown ? 'primary' : 'outline-primary'}}\" (click)=\"setIsRequestShown(true)\" id=\"req-btn\">Request</button>\n        <button type=\"button\" class=\"btn btn-{{!isRequestShown ? 'primary' : 'outline-primary'}}\" (click)=\"setIsRequestShown(false)\" id=\"res-btn\">Response</button>\n      </div>\n    <br/>\n    <br/>\n    \n    <div *ngIf=\"isRequestShown; else responseTemplate\">\n        <div calss=\"url\">\n            <div class=\"input-group mb-3\">\n                <button class=\"btn btn-{{template.getBootstrapType()}} dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    <div *ngIf=\"template.getMethod(); then selectedMethod else unselectedMethod\"></div>\n                    <ng-template #selectedMethod>{{template.getMethod()}}</ng-template>\n                    <ng-template #unselectedMethod>Method</ng-template>\n                </button>\n                <ul class=\"dropdown-menu\">\n                  <li *ngFor=\"let method of methods\"><button class=\"dropdown-item\" (click)=\"template.setMethod(method)\">{{method}}</button></li>\n                </ul>\n                <input type=\"text\" class=\"form-control\" id=\"url\" value=\"{{generateUrl()}}\">\n                <div *ngIf=\"!isLoading; else loading\">\n                    <button class=\"btn btn-dark\" (click)=\"sendRequest()\">Send request</button>\n                </div>\n                <ng-template #loading>\n                    <button class=\"btn btn-dark\" type=\"button\" disabled>\n                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                        Loading...\n                    </button>\n                </ng-template>\n              </div>\n        </div>\n        <div *ngIf=\"alert.isVisible\" class=\"alert alert-{{alert.bootstrapType}}\" role=\"alert\">\n            {{alert.text}}\n            <button type=\"button\" class=\"btn-close float-end\" (click)=\"alert.isVisible = false\"></button>\n        </div>\n        <div class=\"request accordion\" id=\"accordion\">\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"headingZero\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseZero\" aria-expanded=\"true\" aria-controls=\"collapseZero\">\n                        Url templates\n                    </button>\n                </h2>\n                <div id=\"collapseZero\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingZero\" data-bs-parent=\"#accordion\">\n                    <div class=\"accordion-body\">\n                        <div class=\"templates row\">\n                            <div *ngFor=\"let template of templates\" class=\"col-md-6 col-sm-12\">\n                                <button class=\"btn btn-secondary btn-{{template.getBootstrapType()}}\"\n                                        (click)=\"setTemplate(template)\"> \n                                    {{template.getMethod()}} {{template.getUrl()}}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"headingOne\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                        Path params\n                    </button>\n                </h2>\n                <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordion\">\n                    <div class=\"accordion-body\">\n                        <div>\n                            <div *ngFor=\"let pathParam of pathParams\" class=\"row params\">\n                                <div class=\"col param\">\n                                    {{pathParam.key}}\n                                </div>\n                                <div class=\"col param\">\n                                    {{pathParam.value}}\n                                </div>\n                                <div class=\"col\">\n                                    <button class=\"btn btn-danger float-end\" (click)=\"removeParam(pathParam.key, pathParam.value, 'path')\">\n                                        remove\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"key\" id=\"path-param-key\" >\n                            <input type=\"text\" class=\"form-control\" placeholder=\"value\" id=\"path-param-value\" >\n                            <button class=\"btn btn-outline-secondary\" (click)=\"addParam('path')\">Add</button>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n            <div class=\"accordion-item\">\n    \n                <h2 class=\"accordion-header\" id=\"headingTwo\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                        Query params\n                    </button>\n                </h2>\n                <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordion\">\n                    <div class=\"accordion-body\">\n                        <div>\n                            <div *ngFor=\"let prep of preparedQueryParams\" class=\"prep\">\n                                <div class=\"input-group\">\n                                    <input type=\"text\" class=\"form-control\" value=\"{{prep.key}}\" disabled>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"value\" id=\"prep-key-{{prep.key}}\" (blur)=\"updateValue(prep.key)\" >\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"prep.enabled\" (change)=\"prep.enabled = !prep.enabled;\">\n                                    </div>\n                                </div>\n                            </div>\n            \n                            <div *ngFor=\"let queryParam of queryParams\" class=\"row params\">\n                                <div class=\"col param\">\n                                    {{queryParam.key}}\n                                </div>\n                                <div class=\"col param\">\n                                    {{queryParam.value}}\n                                </div>\n                                <div class=\"col\">\n                                    <button class=\"btn btn-danger float-end\" (click)=\"removeParam(queryParam.key, queryParam.value, 'query')\">\n                                        remove\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"input-group\">\n                            <input type=\"text\" class=\"form-control\" value=\"sort\" id=\"query-param-key\" >\n                            <input type=\"text\" class=\"form-control\" placeholder=\"value\" id=\"query-param-value\" >\n                            <button class=\"btn btn-outline-secondary\" (click)=\"addParam('query')\">Add</button>\n                        </div>      \n                    </div>\n                </div>\n            </div>\n            <div class=\"accordion-item\">\n                <h2 class=\"accordion-header\" id=\"headingThree\">\n                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                        Body\n                    </button>\n                </h2>\n                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordion\">\n                    <div class=\"accordion-body\">\n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"isXml\" (change)=\"isXml = !isXml;\">\n                            <label class=\"form-check-label\" for=\"is-xml\">\n                              XML view\n                            </label>\n                        </div>\n                        <br/>\n                        <div *ngIf=\"isXml; else notXml\">\n                            <textarea class=\"form-control\" id=\"xml-view\"  [value]=\"getXmlView()\"></textarea>\n                        </div>\n                        <ng-template #notXml>\n                            <div class=\"form-check form-switch\">\n                                <input class=\"form-check-input switch\" type=\"checkbox\" \n                                    [checked]=\"bodyProduct.isEnabled\" (change)=\"bodyProduct.isEnabled = !bodyProduct.isEnabled\">\n                                <h1 class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Product</h1>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">Id</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.id.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\" \n                                        [checked]=\"bodyProduct.id.isEnabled\" (change)=\"bodyProduct.id.isEnabled = !bodyProduct.id.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">Name</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.name.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.name.isEnabled\" (change)=\"bodyProduct.name.isEnabled = !bodyProduct.name.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"nested\">\n                                <div class=\"form-check form-switch\">\n                                    <input class=\"form-check-input switch\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.coordinates.isEnabled\" (change)=\"bodyProduct.coordinates.isEnabled = !bodyProduct.coordinates.isEnabled\">\n                                    <h5 class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Coordinates</h5>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <span class=\"input-group-text\">X</span>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.coordinates.x.value\">\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\"  \n                                            [checked]=\"bodyProduct.coordinates.x.isEnabled\" (change)=\"bodyProduct.coordinates.x.isEnabled = !bodyProduct.coordinates.x.isEnabled\">\n                                    </div>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <span class=\"input-group-text\">Y</span>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.coordinates.y.value\">\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\"  \n                                            [checked]=\"bodyProduct.coordinates.y.isEnabled\" (change)=\"bodyProduct.coordinates.y.isEnabled = !bodyProduct.coordinates.y.isEnabled\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">CreationDate</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.creationDate.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.creationDate.isEnabled\" (change)=\"bodyProduct.creationDate.isEnabled = !bodyProduct.creationDate.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">Price</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.price.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.price.isEnabled\" (change)=\"bodyProduct.price.isEnabled = !bodyProduct.price.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">PartNumber</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.partNumber.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.partNumber.isEnabled\" (change)=\"bodyProduct.partNumber.isEnabled = !bodyProduct.partNumber.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">ManufactureCost</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.manufactureCost.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.manufactureCost.isEnabled\" (change)=\"bodyProduct.manufactureCost.isEnabled = !bodyProduct.manufactureCost.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\">UnitOfMeasure</span>\n                                <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.unitOfMeasure.value\">\n                                <div class=\"input-group-text\">\n                                    <label class=\"form-check-label\">\n                                        Enable\n                                    </label>\n                                    <input class=\"form-check-input\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.unitOfMeasure.isEnabled\" (change)=\"bodyProduct.unitOfMeasure.isEnabled = !bodyProduct.unitOfMeasure.isEnabled\">\n                                </div>\n                            </div>\n                            <div class=\"nested\">\n                                <div class=\"form-check form-switch\">\n                                    <input class=\"form-check-input switch\" type=\"checkbox\"  \n                                        [checked]=\"bodyProduct.person.isEnabled\" (change)=\"bodyProduct.person.isEnabled = !bodyProduct.person.isEnabled\">\n                                    <h3 class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Owner</h3>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <span class=\"input-group-text\">Name</span>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.name.value\">\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\"  \n                                            [checked]=\"bodyProduct.person.name.isEnabled\" (change)=\"bodyProduct.person.name.isEnabled = !bodyProduct.person.name.isEnabled\">\n                                    </div>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <span class=\"input-group-text\">Weight</span>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.weight.value\">\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\" \n                                            [checked]=\"bodyProduct.person.weight.isEnabled\" (change)=\"bodyProduct.person.weight.isEnabled = !bodyProduct.person.weight.isEnabled\">\n                                    </div>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <span class=\"input-group-text\">Nationality</span>\n                                    <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.country.value\">\n                                    <div class=\"input-group-text\">\n                                        <label class=\"form-check-label\">\n                                            Enable\n                                        </label>\n                                        <input class=\"form-check-input\" type=\"checkbox\" \n                                            [checked]=\"bodyProduct.person.country.isEnabled\" (change)=\"bodyProduct.person.country.isEnabled = !bodyProduct.person.country.isEnabled\">\n                                    </div>\n                                </div>\n                                <div class=\"nested\">\n                                    <div class=\"form-check form-switch\">\n                                        <input class=\"form-check-input switch\" type=\"checkbox\" \n                                            [checked]=\"bodyProduct.person.location.isEnabled\" (change)=\"bodyProduct.person.location.isEnabled = !bodyProduct.person.location.isEnabled\">\n                                        <h5 class=\"form-check-label\" for=\"flexSwitchCheckChecked\">Location</h5>\n                                    </div>\n                                    <div class=\"input-group mb-3\">\n                                        <span class=\"input-group-text\">X</span>\n                                        <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.location.x.value\">\n                                        <div class=\"input-group-text\">\n                                            <label class=\"form-check-label\">\n                                                Enable\n                                            </label>\n                                            <input class=\"form-check-input\" type=\"checkbox\" \n                                                [checked]=\"bodyProduct.person.location.x.isEnabled\"(change)=\"bodyProduct.person.location.x.isEnabled = !bodyProduct.person.location.x.isEnabled\">\n                                        </div>\n                                    </div>\n                                    <div class=\"input-group mb-3\">\n                                        <span class=\"input-group-text\">Y</span>\n                                        <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.location.y.value\">\n                                        <div class=\"input-group-text\">\n                                            <label class=\"form-check-label\">\n                                                Enable\n                                            </label>\n                                            <input class=\"form-check-input\" type=\"checkbox\" \n                                                [checked]=\"bodyProduct.person.location.y.isEnabled\"(change)=\"bodyProduct.person.location.y.isEnabled = !bodyProduct.person.location.y.isEnabled\">\n                                        </div>\n                                    </div>\n                                    <div class=\"input-group mb-3\">\n                                        <span class=\"input-group-text\">Z</span>\n                                        <input type=\"text\" class=\"form-control\" [formControl]=\"bodyProduct.person.location.z.value\">\n                                        <div class=\"input-group-text\">\n                                            <label class=\"form-check-label\">\n                                                Enable\n                                            </label>\n                                            <input class=\"form-check-input\" type=\"checkbox\" \n                                                [checked]=\"bodyProduct.person.location.z.isEnabled\" (change)=\"bodyProduct.person.location.z.isEnabled = !bodyProduct.person.location.z.isEnabled\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #responseTemplate>\n        <h1 *ngIf=\"response.getStatusCode() != -1\">\n            <span class=\"badge bg-danger\">\n                Status: {{response.getStatusCode()}}\n            </span>\n        </h1>\n        <h2 *ngIf=\"response.getMessage()\">\n            {{response.getMessage()}} \n        </h2>\n        <div *ngIf=\"response.getProducts().length > 0\">\n            <div *ngFor=\"let product of response.getProducts()\" class=\"nested\"> \n                <h3><span class=\"badge bg-primary\">Product</span></h3>\n                <div *ngIf=\"product.id\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Id</span>\n                    <span class=\"badge bg-light text-dark\">{{product.id}}</span>\n                </div>\n                <div *ngIf=\"product.name\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Name</span>\n                    <span class=\"badge bg-light text-dark\">{{product.name}}</span>\n                </div>\n                <div *ngIf=\"product.coordinates\" class=\"nested\">\n                    <h5><span class=\"badge bg-primary\">Coordinates</span></h5>\n                    <div *ngIf=\"product.coordinates.x\" class=\"row row-cols-lg-auto\">\n                        <span class=\"badge bg-secondary\">X</span>\n                        <span class=\"badge bg-light text-dark\">{{product.coordinates.x}}</span>\n                    </div>\n                    <div *ngIf=\"product.coordinates.y\" class=\"row row-cols-lg-auto\">\n                        <span class=\"badge bg-secondary\">Y</span>\n                        <span class=\"badge bg-light text-dark\">{{product.coordinates.y}}</span>\n                    </div>\n                </div>\n                <div *ngIf=\"product.creationDate\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Creation Date</span>\n                    <span class=\"badge bg-light text-dark\">{{product.creationDate}}</span>\n                </div>\n                <div *ngIf=\"product.price\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Price</span>\n                    <span class=\"badge bg-light text-dark\">{{product.price}}</span>\n                </div>\n                <div *ngIf=\"product.partNumber\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Part Number</span>\n                    <span class=\"badge bg-light text-dark\">{{product.partNumber}}</span>\n                </div>\n                <div *ngIf=\"product.manufactureCost\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Manufacture Cost</span>\n                    <span class=\"badge bg-light text-dark\">{{product.manufactureCost}}</span>\n                </div>\n                <div *ngIf=\"product.unitOfMeasure\" class=\"row row-cols-lg-auto\">\n                    <span class=\"badge bg-secondary\">Unit Of Measure</span>\n                    <span class=\"badge bg-light text-dark\">{{product.unitOfMeasure}}</span>\n                </div>\n                <div *ngIf=\"product.person\" class=\"nested\">\n                    <h5><span class=\"badge bg-primary\">Owner</span></h5>\n                    <div *ngIf=\"product.person.name\" class=\"row row-cols-lg-auto\">\n                        <span class=\"badge bg-secondary\">Name</span>\n                        <span class=\"badge bg-light text-dark\">{{product.person.name}}</span>\n                    </div>\n                    <div *ngIf=\"product.person.weight\" class=\"row row-cols-lg-auto\">\n                        <span class=\"badge bg-secondary\">Weight</span>\n                        <span class=\"badge bg-light text-dark\">{{product.person.weight}}</span>\n                    </div>\n                    <div *ngIf=\"product.person.country\" class=\"row row-cols-lg-auto\">\n                        <span class=\"badge bg-secondary\">Nationality</span>\n                        <span class=\"badge bg-light text-dark\">{{product.person.country}}</span>\n                    </div>\n                    <div *ngIf=\"product.person.location\" class=\"nested\">\n                        <h5><span class=\"badge bg-primary\">Location</span></h5>\n                        <div *ngIf=\"product.person.location.x\" class=\"row row-cols-lg-auto\">\n                            <span class=\"badge bg-secondary\">X</span>\n                            <span class=\"badge bg-light text-dark\">{{product.person.location.x}}</span>\n                        </div>\n                        <div *ngIf=\"product.person.location.y\" class=\"row row-cols-lg-auto\">\n                            <span class=\"badge bg-secondary\">Y</span>\n                            <span class=\"badge bg-light text-dark\">{{product.person.location.y}}</span>\n                        </div>\n                        <div *ngIf=\"product.person.location.z\" class=\"row row-cols-lg-auto\">\n                            <span class=\"badge bg-secondary\">Z</span>\n                            <span class=\"badge bg-light text-dark\">{{product.person.location.z}}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { FormControl } from \"@angular/forms\";\r\n\r\nexport class Template {\r\n    private method: String;\r\n    private url: String;\r\n    private bootstrapType: String;\r\n\r\n    constructor(method:String, url: String) {\r\n      this.method = method;\r\n      this.url = url;\r\n      this.setBootstrapType(method);\r\n    }\r\n  \r\n    public getUrl(): String {\r\n      return this.url;\r\n    }\r\n    public getMethod(): String {\r\n      return this.method;\r\n    }\r\n    public getBootstrapType(): String {\r\n      return this.bootstrapType;\r\n    }\r\n    public setMethod(method: String): void {\r\n      this.method = method;\r\n      this.setBootstrapType(method);\r\n    }\r\n    public setUrl(url: String): void {\r\n      this.url = url;\r\n    }\r\n    private setBootstrapType(method: String) {\r\n      switch (method) {\r\n        case 'GET':\r\n          this.bootstrapType = 'success';\r\n          break;\r\n        case 'POST':\r\n          this.bootstrapType = 'warning';\r\n          break;\r\n        case 'PUT':\r\n          this.bootstrapType = 'info';\r\n          break;\r\n        case 'DELETE':\r\n          this.bootstrapType = 'danger';\r\n          break;\r\n      }\r\n    }\r\n}\r\n\r\nexport interface Param {\r\n  key: String;\r\n  value: String;\r\n  enabled?: boolean;\r\n}\r\nexport class BodyElement {\r\n  value: FormControl = new FormControl('');\r\n  isEnabled: boolean = false;\r\n}\r\nexport class BodyProduct {\r\n  isEnabled: boolean = true;\r\n  id: BodyElement = new BodyElement;\r\n  name: BodyElement = new BodyElement;\r\n  coordinates: BodyCoordinates = new BodyCoordinates;\r\n  creationDate: BodyElement = new BodyElement;\r\n  price: BodyElement = new BodyElement;\r\n  partNumber: BodyElement = new BodyElement;\r\n  manufactureCost: BodyElement = new BodyElement;\r\n  unitOfMeasure: BodyElement = new BodyElement;\r\n  person: BodyPerson = new BodyPerson;\r\n}\r\nexport class BodyCoordinates {\r\n  isEnabled: boolean = false;\r\n  x: BodyElement = new BodyElement;\r\n  y: BodyElement = new BodyElement;\r\n}\r\nexport class BodyPerson {\r\n  isEnabled: boolean = false;\r\n  name: BodyElement = new BodyElement;\r\n  weight: BodyElement = new BodyElement;\r\n  country: BodyElement = new BodyElement;\r\n  location: BodyLocation = new BodyLocation;\r\n}\r\nexport class BodyLocation {\r\n  isEnabled: boolean = false;\r\n  x: BodyElement = new BodyElement;\r\n  y: BodyElement = new BodyElement;\r\n  z: BodyElement = new BodyElement;\r\n}\r\n\r\nexport class Response {\r\n  private statusCode: number = -1;\r\n  private message: String = 'No request has been send yet';\r\n  private products: Product[] = [];\r\n\r\n  constructor() {}\r\n\r\n  public getStatusCode() {\r\n    return this.statusCode;\r\n  }\r\n\r\n  public getMessage() {\r\n    return this.message;\r\n  }\r\n\r\n  public getProducts() {\r\n    return this.products;\r\n  }\r\n\r\n  public setMessage(message: String) {\r\n    this.message = message;\r\n  }\r\n\r\n  public setProducts(body: Product[]) {\r\n    this.products = body;\r\n  }\r\n\r\n  public setStatusCode(statusCode: number) {\r\n    this.statusCode = statusCode;\r\n  }\r\n}\r\n\r\nexport interface Product{\r\n  id?: string;\r\n  name?: string;\r\n  coordinates?: Coordinates;\r\n  creationDate?: string;\r\n  price?: string;\r\n  partNumber?: string;\r\n  manufactureCost?: string;\r\n  unitOfMeasure?:string;\r\n  person?: Person;\r\n}\r\n\r\nexport interface Coordinates {\r\n  x?: string;\r\n  y?: string;\r\n}\r\nexport interface Location {\r\n  x?: string;\r\n  y?: string;\r\n  z?: string;\r\n}\r\n\r\nexport interface Person {\r\n  name?: string;\r\n  weight?: string;\r\n  country?: string;\r\n  location?:Location\r\n}\r\n\r\nexport class Alert {\r\n  isVisible: boolean = false;\r\n  text: String = '';\r\n  bootstrapType: String = '';\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductComponent } from './product/product.component';\n\nconst routes: Routes = [\n  {path: '', component: ProductComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}